---
name: Upload Python Package

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Installing ccdcoe package
        continue-on-error: true
        run: pip install ccdcoe[cli_code] && ccdcoe --version
      - name: Clearing default .env
        run: sed -i -e 's/<<MANDATORY_VALUE>>/""/g' /home/runner/.ccdcoe/.env
      - name: Installing apt-get dependencies
        run: sudo apt-get update && sudo apt-get install -y python3-dev libldap2-dev libsasl2-dev libssl-dev
      - name: Install Dependencies
        run: poetry install --no-interaction --no-root && poetry install --only tests --no-interaction --no-root
      - name: Run Tests with Pytest
        run: poetry run pytest --verbose
  release:
    needs:
      - test
    permissions: write-all
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - name: Commits to file
        run: |
          echo "In this release:" > ./commits.log
          echo "" >> ./commits.log
          /usr/bin/git log --oneline --no-merges $(/usr/bin/git describe --tags --abbrev=0 ${{ github.ref }}^)..${{ github.ref }} >> ./commits.log
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body_path: ./commits.log
          draft: false
          prerelease: false
  build:
    needs:
      - release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build
        run: |
          python -m build
      - name: upload dists
        uses: actions/upload-artifact@v4.6.0
        with:
          name: release-dists
          path: dist/
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    permissions:
      id-token: write
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
